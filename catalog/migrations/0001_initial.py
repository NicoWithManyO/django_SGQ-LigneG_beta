# Generated by Django 5.2.4 on 2025-07-25 20:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ParamItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ex: oxygen_primary, belt_speed', max_length=50, unique=True, verbose_name='Nom technique')),
                ('display_name', models.CharField(help_text='Ex: Oxygène primaire, Vitesse tapis', max_length=100, verbose_name="Nom d'affichage")),
                ('category', models.CharField(choices=[('fibrage', 'Fibrage'), ('ensimeuse', 'Ensimeuse'), ('autre', 'Autre')], max_length=20, verbose_name='Catégorie')),
                ('unit', models.CharField(blank=True, help_text='Ex: l/min, m/h', max_length=20, verbose_name='Unité')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('default_value', models.DecimalField(decimal_places=2, default=0, help_text='Valeur par défaut pour ce paramètre', max_digits=10, verbose_name='Valeur par défaut')),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Item de paramètre machine',
                'verbose_name_plural': 'Items de paramètres machine',
                'ordering': ['category', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SpecItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ex: thickness, micrometer, surface_mass', max_length=50, unique=True, verbose_name='Nom technique')),
                ('display_name', models.CharField(help_text='Ex: Épaisseur, Micronnaire, Masse surfacique', max_length=100, verbose_name="Nom d'affichage")),
                ('unit', models.CharField(blank=True, help_text='Ex: mm, g/m², %', max_length=20, verbose_name='Unité')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Item de spécification',
                'verbose_name_plural': 'Items de spécification',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WcmChecklistTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom du template')),
                ('description', models.TextField(blank=True, help_text='Description du template et de son usage', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_default', models.BooleanField(default=False, verbose_name='Template par défaut')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Template de check-list WCM',
                'verbose_name_plural': 'Templates de check-list WCM',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProfileParamValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, default=0, help_text='Valeur du paramètre pour ce profil', max_digits=10, verbose_name='Valeur')),
                ('param_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.paramitem', verbose_name='Paramètre')),
            ],
            options={
                'verbose_name': 'Valeur de paramètre',
                'verbose_name_plural': 'Valeurs de paramètres',
            },
        ),
        migrations.CreateModel(
            name='ProfileTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ex: 80g/m², 40g/m²', max_length=100, unique=True, verbose_name='Nom du profil')),
                ('description', models.TextField(blank=True, help_text='Description du profil et de son usage', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_default', models.BooleanField(default=False, verbose_name='Profil par défaut')),
                ('belt_speed_m_per_minute', models.DecimalField(blank=True, decimal_places=2, help_text='Vitesse tapis convertie en m/min (calculée automatiquement)', max_digits=8, null=True, verbose_name='Vitesse tapis (m/min)')),
                ('oee_target', models.DecimalField(decimal_places=2, default=85.0, help_text='Objectif de Taux de Rendement Synthétique (OEE) en pourcentage', max_digits=5, verbose_name='Objectif TRS (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('param_items', models.ManyToManyField(blank=True, help_text='Paramètres machine associés à ce profil', related_name='profile_templates', through='catalog.ProfileParamValue', to='catalog.paramitem', verbose_name='Paramètres machine')),
            ],
            options={
                'verbose_name': 'Template de profil',
                'verbose_name_plural': 'Templates de profil',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProfileSpecValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_min', models.DecimalField(blank=True, decimal_places=6, help_text='Seuil minimum critique', max_digits=12, null=True, verbose_name='Valeur minimale')),
                ('value_min_alert', models.DecimalField(blank=True, decimal_places=6, help_text="Seuil d'alerte bas", max_digits=12, null=True, verbose_name='Alerte minimale')),
                ('value_nominal', models.DecimalField(decimal_places=6, default=0, help_text='Valeur cible', max_digits=12, verbose_name='Valeur nominale')),
                ('value_max_alert', models.DecimalField(blank=True, decimal_places=6, help_text="Seuil d'alerte haut", max_digits=12, null=True, verbose_name='Alerte maximale')),
                ('value_max', models.DecimalField(blank=True, decimal_places=6, help_text='Seuil maximum critique', max_digits=12, null=True, verbose_name='Valeur maximale')),
                ('max_nok', models.PositiveIntegerField(blank=True, help_text='Nombre max de mesures NOK avant blocage', null=True, verbose_name='Max NOK')),
                ('is_blocking', models.BooleanField(default=False, help_text='Cette spec peut-elle bloquer la production?', verbose_name='Bloquant')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.profiletemplate', verbose_name='Profil')),
                ('spec_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.specitem', verbose_name='Spécification')),
            ],
            options={
                'verbose_name': 'Valeur de spécification',
                'verbose_name_plural': 'Valeurs de spécification',
            },
        ),
        migrations.AddField(
            model_name='profileparamvalue',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.profiletemplate', verbose_name='Profil'),
        ),
        migrations.CreateModel(
            name='QualityDefectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom du défaut')),
                ('description', models.TextField(blank=True, help_text='Description détaillée du défaut', verbose_name='Description')),
                ('severity', models.CharField(choices=[('non_blocking', 'Non bloquant'), ('blocking', 'Bloquant'), ('threshold', 'Bloquant selon seuil')], help_text='Niveau de criticité du défaut', max_length=20, verbose_name='Criticité')),
                ('threshold_value', models.PositiveIntegerField(blank=True, help_text='Nombre max avant blocage (si criticité=threshold)', null=True, verbose_name='Valeur seuil')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Type de défaut qualité',
                'verbose_name_plural': 'Types de défauts qualité',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['is_active', 'severity'], name='catalog_qua_is_acti_2f35f1_idx'), models.Index(fields=['name'], name='catalog_qua_name_20c085_idx')],
            },
        ),
        migrations.AddField(
            model_name='profiletemplate',
            name='spec_items',
            field=models.ManyToManyField(blank=True, help_text='Spécifications associées à ce profil', related_name='profile_templates', through='catalog.ProfileSpecValue', to='catalog.specitem', verbose_name='Spécifications'),
        ),
        migrations.CreateModel(
            name='WcmChecklistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='Question ou point à vérifier', max_length=200, unique=True, verbose_name="Texte de l'item")),
                ('category', models.CharField(blank=True, help_text='Ex: Sécurité, Production, Qualité', max_length=50, verbose_name='Catégorie')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Item de check-list WCM',
                'verbose_name_plural': 'Items de check-list WCM',
                'ordering': ['category', 'text'],
                'indexes': [models.Index(fields=['is_active', 'category'], name='catalog_wcm_is_acti_388a26_idx')],
            },
        ),
        migrations.CreateModel(
            name='WcmChecklistTemplateItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('is_required', models.BooleanField(default=True, help_text='Cet item doit-il obligatoirement être complété?', verbose_name='Obligatoire')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.wcmchecklistitem', verbose_name='Item')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.wcmchecklisttemplate', verbose_name='Template')),
            ],
            options={
                'verbose_name': 'Item de template',
                'verbose_name_plural': 'Items de template',
                'ordering': ['template', 'order'],
            },
        ),
        migrations.AddField(
            model_name='wcmchecklisttemplate',
            name='items',
            field=models.ManyToManyField(related_name='templates', through='catalog.WcmChecklistTemplateItem', to='catalog.wcmchecklistitem', verbose_name='Items de la checklist'),
        ),
        migrations.CreateModel(
            name='WcmLostTimeReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du motif')),
                ('category', models.CharField(blank=True, choices=[('arret_programme', 'Arrêt programmé'), ('panne', 'Panne'), ('changement_serie', 'Changement de série'), ('reglage', 'Réglage'), ('maintenance', 'Maintenance'), ('qualite', 'Problème qualité'), ('approvisionnement', 'Approvisionnement'), ('autre', 'Autre')], max_length=30, null=True, verbose_name='Catégorie')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_planned', models.BooleanField(default=False, help_text="Indique si c'est un arrêt planifié", verbose_name='Arrêt planifié')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('order', models.IntegerField(default=100, verbose_name="Ordre d'affichage")),
                ('color', models.CharField(default='#6c757d', help_text="Couleur pour l'affichage dans l'interface", max_length=7, verbose_name='Couleur (hex)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Motif de temps perdu WCM',
                'verbose_name_plural': 'Motifs de temps perdus WCM',
                'ordering': ['category', 'order', 'name'],
                'indexes': [models.Index(fields=['is_active', 'category'], name='catalog_wcm_is_acti_4de765_idx')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='profileparamvalue',
            unique_together={('profile', 'param_item')},
        ),
        migrations.AddIndex(
            model_name='profiletemplate',
            index=models.Index(fields=['is_active', 'is_default'], name='catalog_pro_is_acti_e91e32_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='profilespecvalue',
            unique_together={('profile', 'spec_item')},
        ),
        migrations.AlterUniqueTogether(
            name='wcmchecklisttemplateitem',
            unique_together={('template', 'order')},
        ),
        migrations.AddIndex(
            model_name='wcmchecklisttemplate',
            index=models.Index(fields=['is_active', 'is_default'], name='catalog_wcm_is_acti_d27136_idx'),
        ),
    ]
